{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","sourceText","setSourceText","targetText","setTargetText","isError","setIsError","isLoading","setIsLoading","className","placeholder","spellCheck","autoFocus","onChange","e","target","value","maxLength","length","title","onClick","fetch","body","headers","method","mode","then","res","a","json","resjson","sentences","trans","catch","err","message","xmlns","width","height","fill","viewBox","d","readOnly","tabIndex","navigator","clipboard","writeText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA2GeA,EAxGH,WAAO,IAAD,EAEoBC,mBAAS,wBAF7B,mBAETC,EAFS,KAEGC,EAFH,OAGoBF,mBAAS,IAH7B,mBAGTG,EAHS,KAGGC,EAHH,OAIcJ,oBAAS,GAJvB,mBAITK,EAJS,KAIAC,EAJA,OAKkBN,oBAAS,GAL3B,mBAKTO,EALS,KAKEC,EALF,KA2ChB,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,mDAGF,+BACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,4CACA,0BAAUC,YAAY,gBACpBC,YAAY,EACZC,WAAW,EACXC,SArBS,SAACC,GACpBZ,EAAcY,EAAEC,OAAOC,QAqBbC,UAAW,GACXD,MAAOf,IAET,sBAAKQ,UAAS,uBAAkBR,EAAWiB,QAAU,GAAK,UAAY,IAAtE,UACIjB,EAAWiB,OADf,SAIA,qBAAKT,UAAU,UAAf,SACE,yBAAQU,MAAM,qBACZC,QA3DU,WAEtBhB,EAAc,IAEK,KAAfH,IACFO,GAAa,GACba,MAAM,6MAA8M,CAClNC,KAAK,iBAAD,OAAmBrB,GACvBsB,QAAS,CACP,eAAgB,qCAElBC,OAAQ,OACRC,KAAM,SACLC,KAPH,uCAOQ,WAAMC,GAAN,eAAAC,EAAA,0DACFD,EADE,uBAEJrB,GAAW,GAFP,SAGkBqB,EAAIE,OAHtB,OAGEC,EAHF,OAKJtB,GAAa,GACbJ,EAAc0B,EAAQC,UAAU,GAAGC,OAN/B,2CAPR,uDAeGC,OAAM,SAAAC,GACP5B,GAAW,GACXF,EAAc8B,EAAIC,cAqCV1B,UAAU,mBAFZ,sBAME,qBAAK2B,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,QAAQ,YAA3F,SACE,sBAAMC,EAAE,iNAMhB,sBAAKhC,UAAU,SAAf,UACE,yCACA,0BAAUC,YAAcH,EAAY,aAAe,cACjDI,YAAY,EACZ+B,UAAU,EACV1B,MAAOb,EACPwC,SAAS,KACTlC,UAAWJ,EAAU,MAAQ,KAE/B,qBAAKI,UAAU,UAAf,SACE,wBAAQU,MAAM,OACZC,QAlDG,WACfwB,UAAUC,UAAUC,UAAU3C,IAgDpB,SAGE,sBAAKiC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,QAAQ,YAA3F,UACE,sBAAMC,EAAE,6JACR,sBAAMA,EAAE,4MCpFXM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4e61a19.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nconst App = () => {\n\n  const [sourceText, setSourceText] = useState(\"Halo selamat datang!\")\n  const [targetText, setTargetText] = useState(\"\")\n  const [isError, setIsError] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleTranslate = () => {\n\n    setTargetText(\"\")\n    \n    if (sourceText !== \"\") {\n      setIsLoading(true)\n      fetch(\"https://damp-tor-79736.herokuapp.com/https://translate.google.com/translate_a/single?client=at&dt=t&dt=ld&dt=qca&dt=rm&dt=bd&dj=1&ie=UTF-8&oe=UTF-8&inputm=2&otf=2&iid=1dd3b944-fa62-4b55-b330-74909a99969\", {\n        body: `sl=id&tl=en&q=${sourceText}`,\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        method: \"POST\",\n        mode: \"cors\"\n      }).then(async res => {\n        if (res) {\n          setIsError(false)\n          const resjson = await res.json()\n\n          setIsLoading(false)\n          setTargetText(resjson.sentences[0].trans)\n        }\n      }).catch(err => {\n        setIsError(true)\n        setTargetText(err.message)\n      })\n    }\n  }\n\n  const handleChange = (e) => {\n    setSourceText(e.target.value)\n  }\n\n  const copyText = () => {\n    navigator.clipboard.writeText(targetText)\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Translation App</h1>\n      </header>\n\n      <main>\n        <div className=\"container\">\n          <div className=\"source\">\n            <h5>Indonesian</h5>\n            <textarea placeholder=\"Type here ...\"\n              spellCheck={false}\n              autoFocus={true}\n              onChange={handleChange}\n              maxLength={60}\n              value={sourceText} />\n\n            <div className={`text-counter ${sourceText.length >= 60 ? 'reached' : ''}`}>\n              { sourceText.length }/60\n            </div>\n\n            <div className=\"actions\">\n              <button title=\"Click to translate\"\n                onClick={handleTranslate}\n                className=\"translate-button\">\n\n                Translate\n\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                  <path d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"/>\n                </svg>\n              </button>\n            </div>\n\n          </div>\n          <div className=\"target\">\n            <h5>English</h5>\n            <textarea placeholder={ isLoading ? \"Loading...\" : \"Translation\"}\n              spellCheck={false}\n              readOnly={true}\n              value={targetText}\n              tabIndex=\"-1\"\n              className={isError ? \"err\" : \"\"} />\n\n            <div className=\"actions\">\n              <button title=\"Copy\"\n                onClick={copyText}>\n\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                  <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\n                  <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}